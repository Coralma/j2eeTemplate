/* = Gulp组件
 -------------------------------------------------------------- */
// 引入gulp
var gulp = require('gulp');					// 基础库

// 引入gulp组件
var sass = require('gulp-ruby-sass'),		// CSS预处理/Sass编译
    uglify = require('gulp-uglify'),			// JS文件压缩
    rename = require('gulp-rename'),			// 文件重命名
   order = require("gulp-order"),
    concat = require("gulp-concat"), 			// 文件合并
    clean = require('del'),				    // 文件清理
    streamqueue = require('streamqueue'),
    ngHtml2Js = require("gulp-ng-html2js"), //angular template cache处理
    htmlmin = require("gulp-htmlmin"); //html文件压缩
/* = 全局设置
 -------------------------------------------------------------- */
var srcPath = {
    html: 'src/js',
    scss: 'src/scss',
    script: 'src/js',
    image: 'src/images'
};

var destPath = {
    html: 'dist/html',
    scss: 'dist/scss',
    script: 'dist/js',
    image: 'dist/images'
};

gulp.task('clean', function () {
    clean.sync(['dist']);
});

gulp.task('concatScriptAndTemplate', ['clean'], function () {
    var htmlminOptions = {};
    //htmlminOptions = {collapseWhitespace: true};


    return streamqueue({objectMode: true}
        , gulp.src(srcPath.script + '/common/**/*.js') .pipe(order([
            "**/module.js",
            "**/*.js"
        ]))

        , function () {
            return gulp.src(srcPath.html + '/common/business-components/model-validation/**/*.tpl.html')
                .pipe(htmlmin(htmlminOptions))
                .pipe(ngHtml2Js({
                    moduleName: "cccis.angular.common.businessComponents.model-validation", prefix: "common/business-components/model-validation/",
                    declareModule: false
                }))
        }()
        , function () {
            return gulp.src(srcPath.html + '/common/components/dialog/**/*.tpl.html')
                .pipe(htmlmin(htmlminOptions))
                .pipe(ngHtml2Js({moduleName: "cccis.angular.common.components.dialog", prefix: "common/components/dialog/", declareModule: false}))
        }()
        , function () {
            return gulp.src(srcPath.html + '/common/components/grid/**/*.tpl.html')
                .pipe(htmlmin(htmlminOptions))
                .pipe(ngHtml2Js({moduleName: "cccis.angular.common.components.grid", prefix: "common/components/grid/",declareModule: false}))
        }()
    )

        .pipe(concat('cccis-angular-common.js'))
        .pipe(gulp.dest(destPath.script));
});

// JS文件压缩&重命名
gulp.task('minifyScript', ['concatScriptAndTemplate'], function () {
    return gulp.src([destPath.script + '/*.js', '!' + destPath.script + '/*.min.js'])
        .pipe(rename({suffix: '.min'}))
        .pipe(uglify({mangle: true, compress: true}))
        .pipe(gulp.dest(destPath.script));
});

gulp.task('scss', [], function () {
    return gulp.src([srcPath.scss + '/*.scss'])
        .pipe(gulp.dest(destPath.scss));
});

gulp.task('image', [], function () {
    return gulp.src([srcPath.image + '/*.*'])
        .pipe(gulp.dest(destPath.image));
});

gulp.task('release', ['minifyScript','scss','image']);

