/**
 * 码表客户端
 */
angular.module('cccis.angular.common.utils').factory('cccisCodeTableUtils', ['$q', 'cccisUrlUtils', function ($q, cccisUrlUtils) {
    var KEY_PARTS_CODE_TYPE_LIST = 'CODE_TYPE_LIST'; //维护所有的码表类型
    var KEY_PARTS_CODE_PREFIX = 'CODE_TYPE_'; //CodeType相关的码表
    /**
     * 从服务端重新获取CodeTable
     */
    var fetchCodeTableMap = function () {
        var deferred = $q.defer();

        var codeTableMap = [];
        cccisUrlUtils.postJsonData("/base/codeTable/listAll", {}).then(function (data) {
            if (data.result != cccisUrlUtils.RESULT.SUCCESS) {
                console.log(data.message);
                deferred.resolve(null);
            } else {
                codeTableMap = data.codeTableMap;
                deferred.resolve(codeTableMap);
            }

        });
        return deferred.promise;
    };

    var initCodeTable = function (forceFlag) {
        var deferred = $q.defer();
        var partsCodeTypeList = localStorage.getItem(KEY_PARTS_CODE_TYPE_LIST);
        if (partsCodeTypeList && !forceFlag) {
            deferred.resolve(true);
        } else {
            var codeTypeIds = [];
            fetchCodeTableMap().then(function (codeTableMap) {
                if (codeTableMap) {
                    _.each(codeTableMap, function (codeTable, codeTypeId) {
                        codeTypeIds.push(codeTypeId);
                        localStorage.setItem(KEY_PARTS_CODE_PREFIX + codeTypeId, Base64.encode(JSON.stringify(codeTable)));
                    });
                    localStorage.setItem(KEY_PARTS_CODE_TYPE_LIST, Base64.encode(JSON.stringify(codeTypeIds)));
                    deferred.resolve(true);
                } else {
                    deferred.resolve(false);
                }
            })
        }
        return deferred.promise;
    };

    /**
     * 取得指定CodeTypeId对应的code
     */
    var getCodesByType = function (codeTypeId) {
        var codeTableJSON = localStorage.getItem(KEY_PARTS_CODE_PREFIX + codeTypeId);
        if (codeTableJSON) {
            return JSON.parse(Base64.decode(codeTableJSON));
        } else {
            return [];
        }
    };

    /**
     * 取得指定CodeTypeId对应的code
     */
    var getCodeByTypeAndCode = function (codeTypeId, codeId) {
        var codeTable = getCodesByType(codeTypeId);
        return _.find(codeTable, {'codeId': codeId});
    };

    /**
     * 取得指定CodeTypeId对应的code
     */
    var getCodeValueByTypeAndCode = function (codeTypeId, codeId) {
        var code = getCodeByTypeAndCode(codeTypeId, codeId);
        if(code){
            return code.text;
        }else{
            return code;
        }
    };


    return {
        initCodeTable: initCodeTable,
        getCodesByType: getCodesByType,
        getCodeByTypeAndCode: getCodeByTypeAndCode,
        getCodeValueByTypeAndCode: getCodeValueByTypeAndCode
    };
}]);