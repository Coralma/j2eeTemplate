/**
 * FixedHeight：基于父容器，自动计算grid content高度
 *
 * Options属性：
 *      noDataMessage：无数据显示的message
 *      useExternalPagination：是否使用外部分页
 *      columnDefs：列定义
 *      gridData：数据

 * Grid Col属性：
 *      field：字段
 *      displayName：显示列头名称
 *      sort：排序状态 - null，'asc'，'desc'
 *      enableSorting：是否支持排序
 *
 *      headStyle：head样式（ng-style）
 *
 *      cellTemplate：cell模板
 *      cellTemplateScope：cell模板scope
 *      cellClass：cell style（class）
 *      cellStyle：cell样式（ng-style）
 *
 * Grid Row属性：
 *
 * API：
 *      setGridData
 */

angular.module('cccis.angular.common.components.grid').directive('cccisSimpleFixedHeightGrid', ['$timeout', '$window', function ($timeout, $window) {
    return {
        restrict: 'E',
        replace: true,
        scope: {
            options: '=',
            api: '='
        },
        link: function ($scope, $element, $attrs) {
            $scope.onLoad = function () {
                $scope.options.noDataMessage = $scope.options.noDataMessage || '没有找到匹配的结果。';
                $scope.options.useExternalPagination = $scope.options.useExternalPagination || false;
                $scope.appScope = $scope.$parent;
                // init explore api
                $scope.$watch('api', function (newVal, oldVal) {
                    if ($scope.api) {
                        $scope.api.setGridData = $scope.setGridData;
                    }
                });
                $scope.initColumns();

                if($scope.options.gridData){
                    $scope.setGridData($scope.options.gridData);
                }
            };

            /**
             * 初始化列
             **/
            $scope.initColumns = function () {
                $scope.columns = $scope.options.columnDefs;
                $scope.columnCount = $scope.columns.length;
            };

            $scope.sortData = function (col, columns) {
                if (!col.enableSorting) {
                    return;
                }
                var sortedData = {};

                //清除之前的排序列
                _.forEach(columns, function (otherCol) {
                    if (col.field != otherCol.field) {
                        otherCol.sort = null;
                    }
                });

                if (col.sort == null) {
                    col.sort = 'desc';
                } else if (col.sort == 'desc') {
                    col.sort = 'asc';
                } else if (col.sort == 'asc') {
                    col.sort = null;
                }

                if ($scope.options.useExternalPagination) {
                    if ($scope.onSortChanged) {
                        var sortField = col.sort == null ? null : col.field;
                        $scope.onSortChanged($scope.options.currentPage, $scope.options.pageItemSize, sortField, col.sort);
                    }
                } else {
                    if (col.sort == null) {
                        sortedData = $scope.gridDataBak;
                    } else if (col.sort == 'asc') {
                        sortedData = _.sortBy($scope.gridData, col.field);
                    } else if (col.sort == 'desc') {
                        sortedData = _.sortBy($scope.gridData, col.field).reverse();
                    }
                    angular.copy(sortedData, $scope.gridData);
                }
            };


            $scope.setGridData = function (gridData) {
                $scope.gridData = gridData;
                if (!$scope.options.useExternalPagination) {
                    $scope.gridDataBak = angular.copy($scope.gridData); //内建排序时使用
                }
            };

            $scope.onLoad();
        },
        template: ''+
        '<div class="cccis-pagination-grid cccis-fixed-height-pagination-grid cccis-simple-fixed-height-grid">'+
        '   <div class="head-container">'+
        '       <table class="table table-bordered cccis-table">'+
        '       <thead>'+
        '           <tr>'+
        '               <th ng-repeat="col in columns" ng-class="{\'cursor-pointer\':col.enableSorting==true}" ng-style="col.headStyle" ng-click="sortData(col, columns)">'+
        '                   <div title="{{::col.displayName}}">{{::col.displayName}}</div>'+
        '                   <div ng-if="col.sort == \'desc\'"><i class="glyphicon glyphicon-triangle-bottom"></i></div>'+
        '                   <div ng-if="col.sort == \'asc\'"><i class="glyphicon glyphicon-triangle-top"></i></div>'+
        '               </th>'+
        '           </tr>'+
        '       </thead>'+
        '       </table>'+
        '   </div>'+
        '   <div class="content-container">'+
        '       <table class="table table-bordered cccis-table">'+
        '       <thead>'+
        '           <tr>'+
        '               <th ng-repeat="col in columns" ng-style="col.headStyle" >'+
        '                   <div>{{::col.displayName}}</div>'+
        '               </th>'+
        '           </tr>'+
        '       </thead>'+
        '       <tbody class="no-data-found" ng-if="gridData == null || gridData.length==0">'+
        '           <tr>'+
        '               <td colspan="{{::columnCount}}">'+
        '                   <div style="height:50px;">{{::options.noDataMessage}}</div>'+
        '               </td>'+
        '           </tr>'+
        '       </tbody>'+
        '       <tbody class="data-found" ng-if="gridData.length>0">'+
        '           <tr ng-repeat="row in gridData">'+
        '               <td ng-repeat="col in columns" class="{{::col.cellClass}}" ng-style="col.cellStyle">'+
        '                   <div ng-if="col.cellTemplate" cell-compiler="col.cellTemplate"></div>'+
        '                   <div ng-if="!col.cellTemplate" title="{{row[col.field]}}">{{row[col.field]}}</div>'+
        '               </td>'+
        '           </tr>'+
        '       </tbody>'+
        '       </table>'+
        '   </div>'+
        '</div>'
    }
}])