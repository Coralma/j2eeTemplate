'use strict';
angular.module('cccis.angular.common.components.inputField')
    .directive('dropDownExtQueryField', ['$timeout', '$q', function ($timeout, $q) {
        return {
            require: 'ngModel',
            restrict: 'E',
            replace: true,
            scope: {
                ngId: '@', //input id值
                ngModel: '=',
                placeholder: '@',
                allowClear: '@',
                ngDisabled: '@',    //是否disable
                dropDownExtQueryFieldClass: '@',

                minimumInputLength: '@', //输入字数后开始查询
                ajaxUrl: '@',

                optionText: '@',    //option的对象显示的TEXT文本属性
                optionValue: '@',   //option的对象对应的VALUE属性

                beforeOptionSelected: '=',//选中option之前触发
                onAfterOptionSelected: '=',//选中option之后触发
            },
            template: '' +
            '<div class="cccis-drop-down-field cccis-drop-down-ext-query-field input-group {{dropDownExtQueryFieldClass}}" ng-class="{\'disabled\': ngDisabled}">' +
            '   <select class="form-control select2"></select>' +
            '</div>',
            link: function ($scope, $element, $attrs, ngModelCtrl) {
                $scope.onLoad = function () {
                    $scope.select2Elem = $("select", $element);
                    $scope.select2Options = {
                        data: {
                            results: [],
                            id: $scope.optionValue,
                            text: $scope.optionText,
                        },
                        allowClear: $scope.allowClear == 'true',
                        minimumInputLength: $scope.minimumInputLength,
                        minimumResultsForSearch: $scope.searchEnabled != 'true' ? Infinity : 10,
                        multiple: false,
                        placeholder: $scope.placeholder || '请选择',
                        width: 'resolve',
                        language: {
                            inputTooShort: function () {
                                return "You must enter more characters...";
                            }
                        },
                        ajax: {
                            url: function (params) {
                                return $scope.ajaxUrl;
                            },
                            dataType: 'json',
                            data: function (params) {
                                return {
                                    keyword: params.term,
                                };
                            },
                            cache: false
                        }
                    };
                    $scope.select2Elem.on('select2:select', function (e) {
                        $timeout(function () {
                            var selectedValue = $scope.select2Elem.val();
                            $scope.onOptionSelected(selectedValue);
                        })
                    });
                    /**
                     * 焦点选中Input元素时，将焦点设置到外部DIV边框上
                     */
                    $scope.select2Elem.on('select2:opening', function (e) {
                        $timeout(function () {
                            $('.drop-down-field', $element).addClass('focus');
                            $('.form-control', $element).select();
                        })
                    });
                    /**
                     * 焦点移出Input元素时，去除外部DIV边框的焦点效果
                     */
                    $scope.select2Elem.on('select2:closing', function (e) {
                        $timeout(function () {
                            $('.drop-down-field', $element).removeClass('focus');
                        })
                    });

                    $scope.$watch('ngModel', function () {
                        $scope.selectOption($scope.ngModel);
                    });

                    $scope.$watch('optionText', function () {
                        $scope.updateWidgetOptions('data.text', $scope.optionText);
                    });

                    $scope.$watch('optionValue', function () {
                        $scope.updateWidgetOptions('data.value', $scope.optionValue);
                    });

                    $scope.select2Elem.select2({
                        // theme: "bootstrap",
                        placeholder: $scope.placeholder,
                        allowClear: $scope.allowClear == 'true'
                    })
                };

                $scope.mapToSelect2OptionItem = function (ngModelOptionItem) {
                    if (!ngModelOptionItem || !$scope.select2Options.data) {
                        return null;
                    }
                    return _.find($scope.select2Options.data, function (select2OptionItem) {
                        return select2OptionItem.id == ngModelOptionItem[$scope.optionValue];
                    });
                };

                $scope.updateWidgetOptions = function (optionName, value) {
                    _.set($scope.select2Options, optionName, value);
                    $scope.select2Elem.select2($scope.select2Options);
                };

                /**
                 * 用户操作，选中某个选项
                 */
                $scope.onOptionSelected = function (selectedValue) {
                    var beforeOptionSelectedFunc = $scope.beforeOptionSelected || function () {
                        return true;
                    };
                    var onAfterOptionSelectedFunc = $scope.onAfterOptionSelected || function () {
                        return true;
                    };

                    $q.when(beforeOptionSelectedFunc(selectedValue)).then(function (confirmed) {
                        if (confirmed == true) {
                            //应用当前的值
                            $scope.ngModel = selectedValue;
                            $q.when(onAfterOptionSelectedFunc(selectedValue)).then(function () {
                            });
                        } else {
                            //回退之前的值
                            $scope.selectOption($scope.ngModel);
                        }
                    });
                };

                /**
                 * 模型操作，选中某个选项
                 */
                $scope.selectOption = function (selectedValue) {
                    if (selectedValue == null) {
                        $scope.select2Elem.val(null).trigger("change");
                    } else {
                        $scope.select2Elem.val(selectedValue).trigger("change");
                    }
                };

                $scope.onLoad();
            }
        }
    }]);