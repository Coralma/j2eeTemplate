'use strict';
/**
 * resultMode: '1' : 返回的结果只包含选中的值的数组[1,2,3,5]
 * resultMode: '2' : 返回的结果包含选中，未选的数组[true,true,true,false,true]
 *
 */
angular.module('cccis.angular.common.components.inputField')
    .directive("cccisCheckboxGroupField", ['$timeout', function ($timeout) {
        return {
            restrict: 'E',
            replace: true,
            scope: {
                ngModel: '=',
                optionList: '=',
                optionText: '@',
                optionValue: '@',
                resultMode: '@',
                onItemChanged: '='
            },
            template: '' +
            '<div class="cccis-checkbox-group-field {{checkboxGroupFieldClass}}">' +
            '   <cccis-checkbox-field ng-repeat="option in optionList" ng-model="option.$status" caption="{{option[optionText]}}" ' +
            '           on-checked="onCheckboxOptionChecked(option)">' +
            '   </cccis-checkbox-field>' +
            '</div>',
            link: function ($scope, $elem, attrs) {

                //Options
                $scope.resultMode = $scope.resultMode || '1';

                $scope.isCheckboxSelected = function (option) {
                    return _.includes($scope.ngModel, option[$scope.optionValue]);
                };

                $scope.onCheckboxOptionChecked = function (option) {
                    if ($scope.ngModel) {
                        $scope.ngModel.splice(0, $scope.ngModel.length);
                    } else {
                        $scope.ngModel = [];
                    }

                    _.each($scope.optionList, function (option) {
                        if ($scope.resultMode == '1') {
                            if (option.$status) {
                                $scope.ngModel.push(option[$scope.optionValue]);
                            }
                        }
                        if ($scope.resultMode == '2') {
                            $scope.ngModel.push(option.$status);
                        }
                    });

                    if ($scope.onItemChanged) {
                        $timeout(function () {
                            $scope.onItemChanged(option);
                        });
                    }

                    //触发onChange事件
                    var event = document.createEvent('HTMLEvents');
                    event.initEvent("change", true, true);
                    event.eventType = 'message';
                    if ($elem[0].dispatchEvent) {
                        return $elem[0].dispatchEvent(event);
                    } else if ($elem[0].fireEvent) {
                        return $elem[0].fireEvent("onchange", event);
                    }
                };
            }
        };
    }]);