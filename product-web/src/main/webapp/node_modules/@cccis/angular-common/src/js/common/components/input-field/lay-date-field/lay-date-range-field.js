'use strict';
angular.module('cccis.angular.common.components.inputField')
    .directive('cccisLayDateRangeField', ['$timeout', '$q', function ($timeout, $q) {
        return {
            restrict: 'E',
            replace: true,
            scope: {
                ngId: '@',
                dateType: '@',
                dateRangeStart: '=',
                dateRangeEnd: '=',
                min: '@',
                max: '@',
                placeholder: '@',
                ngDisabled: '=',
                datetimeRangeFieldClass: '@',
                notAfterToday: '@',

                onDataChanged: '=',
            },
            template: '' +
            '<div class="text-field datetime-field datetime-range-field {{datetimeRangeFieldClass}}">' +
            '   <text-field ng-model="dateRangeModel" type="text" placeholder="{{placeholder}}"/>' +
            '</div>',

            link: function ($scope, $element, $attrs) {
                $scope.onLoad = function () {
                    if (!_.includes(['datetime', 'date'], $scope.dateType)) {
                        $scope.dateType = 'datetime';
                        $scope.min = $scope.min || '1900-1-1 00:00:00';
                        $scope.max = $scope.max || '2099-12-31 00:00:00';
                    } else {
                        $scope.min = $scope.min || '1900-1-1';
                        $scope.max = $scope.max || '2099-12-31';
                    }

                    $scope.dateRangeModel = null;

                    $scope.$watch('dateRangeStart', function () {
                        $scope.dateRangeModel = $scope.dateRangeStart + ' - ' + $scope.dateRangeEnd;
                    });


                    $scope.$watch('dateRangeEnd', function () {
                        $scope.dateRangeModel = $scope.dateRangeStart + ' - ' + $scope.dateRangeEnd;
                    });

                    $scope.$watch('dateRangeModel', function () {
                        var splitItems = null;
                        if ($scope.dateRangeModel) {
                            splitItems = $scope.dateRangeModel.split(' - ');
                        }
                        if (splitItems && splitItems.length == 2) {
                            $scope.dateRangeStart = splitItems[0];
                            $scope.dateRangeEnd = splitItems[1];
                        } else {
                            $scope.dateRangeStart = null;
                            $scope.dateRangeEnd = null;
                        }
                    });

                    laydate.render({
                        elem: $("input", $element)[0],
                        type: $scope.dateType,
                        range: true,
                        min: $scope.min,
                        max: $scope.max,
                        ready: function (dateRangeStart, dateRangeEnd) {
                            //控件初始打开的回调
                            $scope.$apply(function () {
                                console.log("ready");
                            });
                        },
                        render: function (options) {
                            //弹出控件提示
                            $scope.$apply(function () {
                                console.log("render");
                            });
                        },
                        change: function (value, dateRangeStart, dateRangeEnd) {
                            //日期时间被切换后的回调
                            $scope.$apply(function () {
                                console.log("change");
                                // $scope.dateRangeStart = dateRangeStart;
                                // $scope.dateRangeEnd = dateRangeEnd;
                            });

                        },
                        done: function (value, dateRangeStart, dateRangeEnd) {
                            //点击日期、清空、现在、确定均会触发
                            $scope.$apply(function () {
                                console.log("value:" + value);
                                var splitItems = null;
                                if (value) {
                                    splitItems = value.split(' - ');
                                }
                                if (splitItems && splitItems.length == 2) {
                                    $scope.dateRangeStart = splitItems[0];
                                    $scope.dateRangeEnd = splitItems[1];
                                    // $scope.dateRangeStart = moment(splitItems[0], "YYYY-MM-DD").toDate();
                                    // $scope.dateRangeEnd = moment(splitItems[1], "YYYY-MM-DD").toDate();
                                } else {
                                    $scope.dateRangeStart = null;
                                    $scope.dateRangeEnd = null;
                                }
                            });
                        }
                    });
                };

                /**
                 * 焦点选中Input元素时，将焦点设置到外部DIV边框上
                 */
                $scope.onInputFocus = function ($event) {
                    $($event.target).closest('.field').addClass('focus');
                    $($event.target).select();
                };

                /**
                 * 焦点移出Input元素时，去除外部DIV边框的焦点效果
                 */
                $scope.onInputBlur = function ($event) {
                    $($event.target).closest('.field').removeClass('focus');
                };


                $scope.onLoad();
            }
        }
    }])
;